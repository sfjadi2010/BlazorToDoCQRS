@page "/"

@rendermode InteractiveServer

@using BlazorToDoCQRS.Domain
@using BlazorToDoCQRS.Queries
@using BlazorToDoCQRS.Commands
@using FluentValidation

@inject MediatR.IMediator Mediator

<PageTitle>To-Do List</PageTitle>

<div class="row">
    <div class="col">
        <h3>To-Do List</h3>
    </div>
    <div class="col text-end">
        <a class="btn btn-success" href="/create">Create New</a>
    </div>
</div>


@if (Items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Complete?</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in Items)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>@item.Description</td>
                    <td>@item.IsComplete</td>
                    <td>
                        <a class="btn btn-primary" href="/edit/@item.Id">Edit</a>
                        <button class="btn btn-danger" @onclick="() => DeleteItem(item.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}


@code {
    private List<ToDoItem>? Items;
    private string? ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Items = await Mediator.Send(new GetAllToDoItemsQuery());
    }

    private async Task DeleteItem(int id)
    {
        try
        {
            // delete task
            await Mediator.Send(new DeleteToDoItemCommand(id));

            // refresh list
            Items = await Mediator.Send(new GetAllToDoItemsQuery());
        }
        catch (ValidationException ex)
        {
            ErrorMessage = string.Join("; ", ex.Errors.Select(e => e.ErrorMessage));
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
        
    }
}